<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:comtext="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--     扫描组件(排除控制层)-->
    <comtext:component-scan base-package="com.jony.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </comtext:component-scan>

    <!--    引入jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--    配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--    开启事务的注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    
    <!--    配置SqlSessionFactoryBean,可以直接在Spring的IOC中获取SqlSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        设置mybatis配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

        <!--        由spring来配置mybatis：-->
        <!--        设置mybatis数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--        设置类型别名对应的包-->
        <property name="typeAliasesPackage" value="com.jony.ssm.pojo"></property>
        <!--        设置映射文件的路径：
        由于src/main/resources/com/jony/ssm/mapper/EmployeeMapper.xml
        和src/main/java/com/jony/ssm/mapper/EmployeeMapper.java路径一致，所以下面的这个配置就不需要了
        （也就是映射文件的包和mapper接口的包此时一致）-->
        <!--        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>-->
    </bean>
    <!--配置mapper接口的扫描，将指定包下面的所有mapper接口，通过sqlSession创建代理实现类对象，并将这些对象交给IOC容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.jony.ssm.mapper"></property>
    </bean>
</beans>